terminal:
  before_script:
    - apt-get update
  script: sleep 60
  variables:
    RAILS_ENV: "test"
    NODE_ENV: "test"

  #before_script:
  #   # Copy RoboFile.
  #  - cp ${CI_PROJECT_DIR}/.gitlab-ci/RoboFile.php ${CI_PROJECT_DIR}
  #   # Symlink Drupal codebase or the module/theme to the web root of the ci
  #   # image.
  #  - robo prepare:folders
  #   # Start Apache.
  #  - apache2-foreground&
  #   # Copy files and prepare test folder with permissions.
  #   - cp ${CI_PROJECT_DIR}/.gitlab-ci/phpunit.xml ${DOC_ROOT}/core
  #   - robo ensure:tests-folders
  #   # Check Drupal codebase and run 'composer install' for a project.
  #   - robo project:build
  #   # After Drupal install we install core/package.json.
  #   - robo yarn:install
  #   # Ensure we have Phpunit for next tests.
  #   - robo install:phpunit
  #   # Add here any custom build step, composer run-script, grunt, webpack, yarn...
  #   - mkdir -p ${WEB_ROOT}/libraries
  #   - curl -s -L -o ${WEB_ROOT}/libraries/lite.zip https://download.ckeditor.com/lite/releases/lite_1.2.28.zip
  #   - curl -s -L -o ${WEB_ROOT}/libraries/opentip.tar.gz https://github.com/enyo/opentip/archive/v2.4.6.tar.gz
  #   - cd ${WEB_ROOT}/libraries/
  #   - unzip -q lite.zip
  #   - tar -xzf opentip.tar.gz
  #   - mv opentip-2* opentip
  # script: sleep 60
  # image:
  #   name: registry.gitlab.com/mog33/drupal8ci/drupal8ci:8.7-drupal
  # services:
  #   - name: registry.gitlab.com/gitlab-org/webide-file-sync:latest
  #     alias: webide-file-sync
  #     entrypoint: ["/bin/sh"]
  #     command: ["-c", "sleep 5 && ./webide-file-sync -project-dir $CI_PROJECT_DIR"]
  #     ports:
  #       # The `webide-file-sync` executable defaults to port 3000.
  #       - number: 3000
